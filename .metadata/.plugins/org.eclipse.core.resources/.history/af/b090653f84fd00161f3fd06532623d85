Ext.define('keyansys.controller.StaticData', {
    extend: 'Ext.app.Controller',

    requires: [
        'keyansys.util.Util',
        'keyansys.util.Glyphs'
    ],

    stores: [
        'staticData.Paper'
        /*'staticData.Patent',
        'staticData.Teaching',
        'staticData.Subject',
        'staticData.PaperCheck',
        'staticData.PatentCheck',
        'staticData.TeachingCheck',
        'staticData.SubjectCheck',
        'staticData.PaperUncheck',
        'staticData.PatentUncheck',
        'staticData.SubjectUncheck',
        'staticData.TeachingUncheck',
        'mail.PaperList',
        'mail.PatentList',
        'mail.SubjectList',
        'mail.TeachingList'*/
    ],

    views: [
        'staticData.BaseGrid',
      //  'staticData.AbstractAllKeyanGrid',
        'staticData.Paper'
      /*  'mail.PaperList',
        'mail.PatentList',
        'mail.SubjectList',
        'mail.TeachingList',
        'staticData.Patent',
        'staticData.Teaching',
        'staticData.Subject',
        'staticData.PaperCheck',
        'staticData.AllPaperCheck',
        'staticData.AllPaperUncheck',
       'staticData.PatentCheck',
       'staticData.AllPatentCheck',
       'staticData.AllPatentUncheck',
       'staticData.TeachingCheck',
       'staticData.SubjectCheck',
       'staticData.AllSubjectCheck',
       'staticData.AllSubjectUncheck',
       'staticData.PaperUncheck',
       'staticData.PatentUncheck',
       'staticData.SubjectUncheck',
       'staticData.TeachingUncheck',
       'staticData.AllTeachingCheck',
       'staticData.AllTeachingUncheck',
       'staticData.TeacherPaperUncheck',
       'staticData.TeacherPatentUncheck',
       'staticData.TeacherSubjectUncheck',
       'staticData.TeacherTeachingUncheck'*/
      // 'staticData.upload'
    ],

    init: function(application) {

        var me = this;

        me.control({
            'staticdatagrid': {
                render: me.render,
                edit: me.onEdit,
                afterrender: me.onAfterRender,
                widgetclick: me.onWidgetClick
            },
            'staticdatagrid button#add': {
                click: me.onButtonClickAdd
            },
            'staticdatagrid button#save': {
                click: me.onButtonClickSave
            },
            'staticdatagrid button#cancel': {
                click: me.onButtonClickCancel
            },
            'staticdatagrid button#clearFilter': {
                click: me.onButtonClickClearFilter
            }
        });

        me.listen({
            store: {
                '#staticData.Base': {
                    write: me.onStoreSync
                }
            }
        });
    },

    onStoreSync: function(store, operation, options){
        Packt.util.Util.showToast('Success! Your changes have been saved.');
    },

    render: function(component, options) {
        component.getStore().load();

       
    },

    onEdit: function(editor, context, options) {
        context.record.set('last_update', new Date());
    },

    onButtonClickAdd: function (button, e, options) {
    	var initValue = {id:'',name:'',descn:''};  
    	  
        var p = new Record(initValue);  

        grid.stopEditing();  
        

        p.dirty = true;  
        p.modified = initValue;  
        if(store.modified.indexOf(p) == -1){  
            store.modified.push(p);  
        }  
    
        store.insert(0, Ext.create(modelName, {
            last_update: new Date()
        }));

        cellEditing.startEditByPosition({row: 0, column: 1});
    },

    onButtonClickSave: function (button, e, options) {
    	store=button.up('staticdatagrid').getStore();
    	 var m = store.modified.slice(0);  
         for (var i = 0; i < m.length; i++) {  
             var record = m[i];//代表某一行  
             var fields = record.fields.keys;//一共有多少列  

             for (var j = 0; j < fields.length; j++) {  
                 var name = fields[j];  
                 var value = record.data[name];  

                 var colIndex = cm.findColumnIndex(name);//获得列号  
                 var rowIndex = store.indexOfId(record.id);//获得行号  
                 var editor = cm.getCellEditor(colIndex).field;//使用的编辑器  

                 if (!editor.validateValue(value)) {  
                     Ext.Msg.alert('提示', '请确保输入的数据正确。', function(){  
                         grid.startEditing(rowIndex, colIndex);//如果不通过激活当前编辑状态  
                     });  
                     return;  
                 }  
             }  
         }  
         // 进行到这里，说明数据都是有效的  
         var jsonArray = [];  
         Ext.each(m, function(item) {  
             jsonArray.push(item.data);  
         }); 
         store.sync();
    },

    onButtonClickCancel: function (button, e, options) {
        button.up('staticdatagrid').getStore().reload();
    },

    onButtonClickClearFilter: function (button, e, options) {
        button.up('staticdatagrid').filters.clearFilters();
    },


    onWidgetClick: function(grid, button){

        var store = grid.getStore(),
            rec = button.getWidgetRecord();

        store.remove(rec);
        Ext.Msg.alert("提示",'你确认删除吗？如确定删除请点击上部“保存更改”按钮完成删除！');
    },

   

    onAfterRender: function(grid, options){
        var view = grid.getView();
        view.on('itemupdate', function (record, index, node, options) {
            grid.validateRow(record, index, node, options);
        });
    }
});